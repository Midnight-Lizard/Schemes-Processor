image: schemes-processor:latest
pullPolicy: IfNotPresent
livenessProbe:
  path: /status/isalive
  initialDelaySeconds: 60
  periodSeconds: 60
  timeoutSeconds: 10
readinessProbe:
  path: /status/isready
  initialDelaySeconds: 30
  periodSeconds: 20
  timeoutSeconds: 5
replicaCount: 1
antiAffinity:
  weight: 80
  apps:
    - portal
    - identity
service:
  name: schemes-processor
  type: NodePort
  externalPort: 80
  internalPort: 80
env:
  ELASTIC_SEARCH_CLIENT_URL: http://ml-es-elasticsearch-client.default.svc.cluster.local:9200
  ELASTIC_SEARCH_EVENT_STORE_SCHEMES_INDEX_NAME: schemes-event-store
  ELASTIC_SEARCH_SNAPSHOT_SCHEMES_INDEX_NAME: schemes-snapshot
  ELASTIC_SEARCH_EVENT_STORE_SHARDS: 2
  ELASTIC_SEARCH_EVENT_STORE_REPLICAS: 1
  ELASTIC_SEARCH_SNAPSHOT_SHARDS: 2
  ELASTIC_SEARCH_SNAPSHOT_REPLICAS: 0
  AGGREGATES_CACHE_ENABLED: true
  AGGREGATES_CACHE_SLIDING_EXPIRATION_SECONDS: 10
  AGGREGATES_CACHE_ABSOLUTE_EXPIRATION_SECONDS: 60
  AGGREGATES_MAX_EVENTS_COUNT: 10
  SCHEMES_EVENTS_TOPIC: schemes-events-a
  EVENT_TOPICS: |-
    [
      "schemes-events-a"
    ]
  REQUEST_TOPICS: |-
    [
      "schemes-requests-a"
    ]
  KAFKA_EVENTS_CONSUMER_CONFIG: |-
    {
      "group.id": "schemes-events-processor",
      "bootstrap.servers": "bootstrap.kafka:9092",
      "partition.assignment.strategy": "range",
      "enable.auto.commit": false,
      "auto.commit.interval.ms": 1000,
      "auto.offset.reset": "earliest"
    }
  KAFKA_REQUESTS_CONSUMER_CONFIG: |-
    {
      "group.id": "schemes-requests-processor",
      "bootstrap.servers": "bootstrap.kafka:9092",
      "partition.assignment.strategy": "range",
      "enable.auto.commit": false,
      "auto.commit.interval.ms": 1000,
      "auto.offset.reset": "earliest"
    }
  KAFKA_EVENTS_PRODUCER_CONFIG: |-
    {
      "bootstrap.servers": "bootstrap.kafka:9092"
    }
  KAFKA_REQUESTS_PRODUCER_CONFIG: |-
    {
      "bootstrap.servers": "bootstrap.kafka:9092"
    }